Not using distributed mode
Creating model: repvit_m0_9
number of params: 5489328
Creating teacher model: regnety_160
RepViT(
  (features): ModuleList(
    (0): Sequential(
      (0): Conv2d_BN(
        (c): Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): GELU(approximate='none')
      (2): Conv2d_BN(
        (c): Conv2d(24, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48, bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), groups=48)
          (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(48, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(16, 48, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2-3): 2 x RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48, bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), groups=48)
          (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (4): RepViTBlock(
      (token_mixer): Sequential(
        (0): Conv2d_BN(
          (c): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)
          (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
        (2): Conv2d_BN(
          (c): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (5): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), groups=96)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (6-7): 2 x RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), groups=96)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (8): RepViTBlock(
      (token_mixer): Sequential(
        (0): Conv2d_BN(
          (c): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
        (2): Conv2d_BN(
          (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (9): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (10): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (11): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (12): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (13): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (14): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (15): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (16): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (17): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (18): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (19): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (20): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (21): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (22-23): 2 x RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (24): RepViTBlock(
      (token_mixer): Sequential(
        (0): Conv2d_BN(
          (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
        (2): Conv2d_BN(
          (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(384, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (25): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), groups=384)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(96, 384, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(384, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (26): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), groups=384)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(384, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (classifier): Classfier(
    (classifier): BN_Linear(
      (bn): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (l): Linear(in_features=384, out_features=1000, bias=True)
    )
    (classifier_dist): BN_Linear(
      (bn): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (l): Linear(in_features=384, out_features=1000, bias=True)
    )
  )
)
{
  "batch_size": 256,
  "epochs": 300,
  "model": "repvit_m0_9",
  "input_size": 224,
  "model_ema": true,
  "model_ema_decay": 0.99996,
  "model_ema_force_cpu": false,
  "opt": "adamw",
  "opt_eps": 1e-08,
  "opt_betas": null,
  "clip_grad": 0.02,
  "clip_mode": "agc",
  "momentum": 0.9,
  "weight_decay": 0.025,
  "sched": "cosine",
  "lr": 0.0005,
  "lr_noise": null,
  "lr_noise_pct": 0.67,
  "lr_noise_std": 1.0,
  "warmup_lr": 1e-06,
  "min_lr": 1e-05,
  "decay_epochs": 30,
  "warmup_epochs": 5,
  "cooldown_epochs": 10,
  "patience_epochs": 10,
  "decay_rate": 0.1,
  "ThreeAugment": false,
  "color_jitter": 0.4,
  "aa": "rand-m9-mstd0.5-inc1",
  "smoothing": 0.1,
  "train_interpolation": "bicubic",
  "repeated_aug": true,
  "reprob": 0.25,
  "remode": "pixel",
  "recount": 1,
  "resplit": false,
  "mixup": 0.8,
  "cutmix": 1.0,
  "cutmix_minmax": null,
  "mixup_prob": 1.0,
  "mixup_switch_prob": 0.5,
  "mixup_mode": "batch",
  "teacher_model": "regnety_160",
  "teacher_path": "https://dl.fbaipublicfiles.com/deit/regnety_160-a5fe301d.pth",
  "distillation_type": "hard",
  "distillation_alpha": 0.5,
  "distillation_tau": 1.0,
  "finetune": "",
  "set_bn_eval": false,
  "data_path": "/home2/keunsoo/imagenet",
  "data_set": "IMNET",
  "inat_category": "name",
  "output_dir": "checkpoints/repvit_m0_9/2024_06_07_00_16_02",
  "device": "cuda",
  "seed": 0,
  "resume": "./checkpoints/repvit_m0_9_distill_300e.pth",
  "start_epoch": 0,
  "eval": true,
  "dist_eval": false,
  "num_workers": 10,
  "pin_mem": true,
  "world_size": 1,
  "dist_url": "env://",
  "save_freq": 1,
  "quantize": false,
  "prune": false,
  "deploy": false,
  "project": "repvit",
  "distributed": false,
  "nb_classes": 1000
}

Loading local checkpoint at ./checkpoints/repvit_m0_9_distill_300e.pth
<All keys matched successfully>

    sparsity=0.40: accuracy=72.72%
    sparsity=0.50: accuracy=72.72%
    sparsity=0.60: accuracy=72.72%
    sparsity=0.70: accuracy=72.72%
    sparsity=0.80: accuracy=72.72%
    sparsity=0.90: accuracy=72.72%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[72.72%, 72.72%, 72.72%, 72.72%, 72.72%, 72.72%]
    sparsity=0.40: accuracy=1.11%
    sparsity=0.50: accuracy=1.11%
    sparsity=0.60: accuracy=1.11%
    sparsity=0.70: accuracy=1.11%
    sparsity=0.80: accuracy=1.11%
    sparsity=0.90: accuracy=1.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[1.11%, 1.11%, 1.11%, 1.11%, 1.11%, 1.11%]
    sparsity=0.40: accuracy=1.11%
    sparsity=0.50: accuracy=1.11%
    sparsity=0.60: accuracy=1.11%
    sparsity=0.70: accuracy=1.11%
    sparsity=0.80: accuracy=1.11%
    sparsity=0.90: accuracy=1.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[1.11%, 1.11%, 1.11%, 1.11%, 1.11%, 1.11%]
    sparsity=0.40: accuracy=1.11%
    sparsity=0.50: accuracy=1.11%
    sparsity=0.60: accuracy=1.11%
    sparsity=0.70: accuracy=1.11%
    sparsity=0.80: accuracy=1.11%
    sparsity=0.90: accuracy=1.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[1.11%, 1.11%, 1.11%, 1.11%, 1.11%, 1.11%]
    sparsity=0.40: accuracy=1.22%
    sparsity=0.50: accuracy=1.22%
    sparsity=0.60: accuracy=1.22%
    sparsity=0.70: accuracy=1.22%
    sparsity=0.80: accuracy=1.22%
    sparsity=0.90: accuracy=1.22%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[1.22%, 1.22%, 1.22%, 1.22%, 1.22%, 1.22%]
    sparsity=0.40: accuracy=1.21%
    sparsity=0.50: accuracy=1.21%
    sparsity=0.60: accuracy=1.21%
    sparsity=0.70: accuracy=1.21%
    sparsity=0.80: accuracy=1.21%
    sparsity=0.90: accuracy=1.21%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[1.21%, 1.21%, 1.21%, 1.21%, 1.21%, 1.21%]
    sparsity=0.40: accuracy=0.89%
    sparsity=0.50: accuracy=0.89%
    sparsity=0.60: accuracy=0.89%
    sparsity=0.70: accuracy=0.89%
    sparsity=0.80: accuracy=0.89%
    sparsity=0.90: accuracy=0.89%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.89%, 0.89%, 0.89%, 0.89%, 0.89%, 0.89%]
    sparsity=0.40: accuracy=0.28%
    sparsity=0.50: accuracy=0.28%
    sparsity=0.60: accuracy=0.28%
    sparsity=0.70: accuracy=0.28%
    sparsity=0.80: accuracy=0.28%
    sparsity=0.90: accuracy=0.28%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.28%, 0.28%, 0.28%, 0.28%, 0.28%, 0.28%]
    sparsity=0.40: accuracy=0.28%
    sparsity=0.50: accuracy=0.28%
    sparsity=0.60: accuracy=0.28%
    sparsity=0.70: accuracy=0.28%
    sparsity=0.80: accuracy=0.28%
    sparsity=0.90: accuracy=0.28%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.28%, 0.28%, 0.28%, 0.28%, 0.28%, 0.28%]
    sparsity=0.40: accuracy=0.28%
    sparsity=0.50: accuracy=0.28%
    sparsity=0.60: accuracy=0.28%
    sparsity=0.70: accuracy=0.28%
    sparsity=0.80: accuracy=0.28%
    sparsity=0.90: accuracy=0.28%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.28%, 0.28%, 0.28%, 0.28%, 0.28%, 0.28%]
    sparsity=0.40: accuracy=0.26%
    sparsity=0.50: accuracy=0.26%
    sparsity=0.60: accuracy=0.26%
    sparsity=0.70: accuracy=0.26%
    sparsity=0.80: accuracy=0.26%
    sparsity=0.90: accuracy=0.26%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.26%, 0.26%, 0.26%, 0.26%, 0.26%, 0.26%]
    sparsity=0.40: accuracy=0.23%
    sparsity=0.50: accuracy=0.23%
    sparsity=0.60: accuracy=0.23%
    sparsity=0.70: accuracy=0.23%
    sparsity=0.80: accuracy=0.23%
    sparsity=0.90: accuracy=0.23%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.23%, 0.23%, 0.23%, 0.23%, 0.23%, 0.23%]
    sparsity=0.40: accuracy=0.23%
    sparsity=0.50: accuracy=0.23%
    sparsity=0.60: accuracy=0.23%
    sparsity=0.70: accuracy=0.23%
    sparsity=0.80: accuracy=0.23%
    sparsity=0.90: accuracy=0.23%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.23%, 0.23%, 0.23%, 0.23%, 0.23%, 0.23%]
    sparsity=0.40: accuracy=0.23%
    sparsity=0.50: accuracy=0.23%
    sparsity=0.60: accuracy=0.23%
    sparsity=0.70: accuracy=0.23%
    sparsity=0.80: accuracy=0.23%
    sparsity=0.90: accuracy=0.23%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.23%, 0.23%, 0.23%, 0.23%, 0.23%, 0.23%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.18%
    sparsity=0.50: accuracy=0.18%
    sparsity=0.60: accuracy=0.18%
    sparsity=0.70: accuracy=0.18%
    sparsity=0.80: accuracy=0.18%
    sparsity=0.90: accuracy=0.18%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.18%, 0.18%, 0.18%, 0.18%, 0.18%, 0.18%]
    sparsity=0.40: accuracy=0.19%
    sparsity=0.50: accuracy=0.19%
    sparsity=0.60: accuracy=0.19%
    sparsity=0.70: accuracy=0.19%
    sparsity=0.80: accuracy=0.19%
    sparsity=0.90: accuracy=0.19%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.19%, 0.19%, 0.19%, 0.19%, 0.19%, 0.19%]
    sparsity=0.40: accuracy=0.19%
    sparsity=0.50: accuracy=0.19%
    sparsity=0.60: accuracy=0.19%
    sparsity=0.70: accuracy=0.19%
    sparsity=0.80: accuracy=0.19%
    sparsity=0.90: accuracy=0.19%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.19%, 0.19%, 0.19%, 0.19%, 0.19%, 0.19%]
    sparsity=0.40: accuracy=0.19%
    sparsity=0.50: accuracy=0.19%
    sparsity=0.60: accuracy=0.19%
    sparsity=0.70: accuracy=0.19%
    sparsity=0.80: accuracy=0.19%
    sparsity=0.90: accuracy=0.19%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.19%, 0.19%, 0.19%, 0.19%, 0.19%, 0.19%]
    sparsity=0.40: accuracy=0.15%
    sparsity=0.50: accuracy=0.15%
    sparsity=0.60: accuracy=0.15%
    sparsity=0.70: accuracy=0.15%
    sparsity=0.80: accuracy=0.15%
    sparsity=0.90: accuracy=0.15%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.15%, 0.15%, 0.15%, 0.15%, 0.15%, 0.15%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.08%
    sparsity=0.50: accuracy=0.08%
    sparsity=0.60: accuracy=0.08%
    sparsity=0.70: accuracy=0.08%
    sparsity=0.80: accuracy=0.08%
    sparsity=0.90: accuracy=0.08%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.08%, 0.08%, 0.08%, 0.08%, 0.08%, 0.08%]
    sparsity=0.40: accuracy=0.14%
    sparsity=0.50: accuracy=0.14%
    sparsity=0.60: accuracy=0.14%
    sparsity=0.70: accuracy=0.14%
    sparsity=0.80: accuracy=0.14%
    sparsity=0.90: accuracy=0.14%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.14%, 0.14%, 0.14%, 0.14%, 0.14%, 0.14%]
    sparsity=0.40: accuracy=0.14%
    sparsity=0.50: accuracy=0.14%
    sparsity=0.60: accuracy=0.14%
    sparsity=0.70: accuracy=0.14%
    sparsity=0.80: accuracy=0.14%
    sparsity=0.90: accuracy=0.14%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.14%, 0.14%, 0.14%, 0.14%, 0.14%, 0.14%]
    sparsity=0.40: accuracy=0.14%
    sparsity=0.50: accuracy=0.14%
    sparsity=0.60: accuracy=0.14%
    sparsity=0.70: accuracy=0.14%
    sparsity=0.80: accuracy=0.14%
    sparsity=0.90: accuracy=0.14%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.14%, 0.14%, 0.14%, 0.14%, 0.14%, 0.14%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.14%
    sparsity=0.50: accuracy=0.14%
    sparsity=0.60: accuracy=0.14%
    sparsity=0.70: accuracy=0.14%
    sparsity=0.80: accuracy=0.14%
    sparsity=0.90: accuracy=0.14%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.14%, 0.14%, 0.14%, 0.14%, 0.14%, 0.14%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.08%
    sparsity=0.50: accuracy=0.08%
    sparsity=0.60: accuracy=0.08%
    sparsity=0.70: accuracy=0.08%
    sparsity=0.80: accuracy=0.08%
    sparsity=0.90: accuracy=0.08%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.08%, 0.08%, 0.08%, 0.08%, 0.08%, 0.08%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.14%
    sparsity=0.50: accuracy=0.14%
    sparsity=0.60: accuracy=0.14%
    sparsity=0.70: accuracy=0.14%
    sparsity=0.80: accuracy=0.14%
    sparsity=0.90: accuracy=0.14%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.14%, 0.14%, 0.14%, 0.14%, 0.14%, 0.14%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.14%
    sparsity=0.50: accuracy=0.14%
    sparsity=0.60: accuracy=0.14%
    sparsity=0.70: accuracy=0.14%
    sparsity=0.80: accuracy=0.14%
    sparsity=0.90: accuracy=0.14%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.14%, 0.14%, 0.14%, 0.14%, 0.14%, 0.14%]
    sparsity=0.40: accuracy=0.14%
    sparsity=0.50: accuracy=0.14%
    sparsity=0.60: accuracy=0.14%
    sparsity=0.70: accuracy=0.14%
    sparsity=0.80: accuracy=0.14%
    sparsity=0.90: accuracy=0.14%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.14%, 0.14%, 0.14%, 0.14%, 0.14%, 0.14%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.08%
    sparsity=0.50: accuracy=0.08%
    sparsity=0.60: accuracy=0.08%
    sparsity=0.70: accuracy=0.08%
    sparsity=0.80: accuracy=0.08%
    sparsity=0.90: accuracy=0.08%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.08%, 0.08%, 0.08%, 0.08%, 0.08%, 0.08%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.12%
    sparsity=0.50: accuracy=0.12%
    sparsity=0.60: accuracy=0.12%
    sparsity=0.70: accuracy=0.12%
    sparsity=0.80: accuracy=0.12%
    sparsity=0.90: accuracy=0.12%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.12%, 0.12%, 0.12%, 0.12%, 0.12%, 0.12%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.13%
    sparsity=0.50: accuracy=0.13%
    sparsity=0.60: accuracy=0.13%
    sparsity=0.70: accuracy=0.13%
    sparsity=0.80: accuracy=0.13%
    sparsity=0.90: accuracy=0.13%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.13%, 0.13%, 0.13%, 0.13%, 0.13%, 0.13%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.07%
    sparsity=0.50: accuracy=0.07%
    sparsity=0.60: accuracy=0.07%
    sparsity=0.70: accuracy=0.07%
    sparsity=0.80: accuracy=0.07%
    sparsity=0.90: accuracy=0.07%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.07%, 0.07%, 0.07%, 0.07%, 0.07%, 0.07%]
    sparsity=0.40: accuracy=0.07%
    sparsity=0.50: accuracy=0.07%
    sparsity=0.60: accuracy=0.07%
    sparsity=0.70: accuracy=0.07%
    sparsity=0.80: accuracy=0.07%
    sparsity=0.90: accuracy=0.07%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.07%, 0.07%, 0.07%, 0.07%, 0.07%, 0.07%]
    sparsity=0.40: accuracy=0.07%
    sparsity=0.50: accuracy=0.07%
    sparsity=0.60: accuracy=0.07%
    sparsity=0.70: accuracy=0.07%
    sparsity=0.80: accuracy=0.07%
    sparsity=0.90: accuracy=0.07%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.07%, 0.07%, 0.07%, 0.07%, 0.07%, 0.07%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.11%
    sparsity=0.50: accuracy=0.11%
    sparsity=0.60: accuracy=0.11%
    sparsity=0.70: accuracy=0.11%
    sparsity=0.80: accuracy=0.11%
    sparsity=0.90: accuracy=0.11%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.11%, 0.11%, 0.11%, 0.11%, 0.11%, 0.11%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.09%
    sparsity=0.50: accuracy=0.09%
    sparsity=0.60: accuracy=0.09%
    sparsity=0.70: accuracy=0.09%
    sparsity=0.80: accuracy=0.09%
    sparsity=0.90: accuracy=0.09%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.09%, 0.09%, 0.09%, 0.09%, 0.09%, 0.09%]
    sparsity=0.40: accuracy=0.08%
    sparsity=0.50: accuracy=0.08%
    sparsity=0.60: accuracy=0.08%
    sparsity=0.70: accuracy=0.08%
    sparsity=0.80: accuracy=0.08%
    sparsity=0.90: accuracy=0.08%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.08%, 0.08%, 0.08%, 0.08%, 0.08%, 0.08%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]
    sparsity=0.40: accuracy=0.10%
    sparsity=0.50: accuracy=0.10%
    sparsity=0.60: accuracy=0.10%
    sparsity=0.70: accuracy=0.10%
    sparsity=0.80: accuracy=0.10%
    sparsity=0.90: accuracy=0.10%sparsity=[0.40,0.50,0.60,0.70,0.80,0.90]: accuracy=[0.10%, 0.10%, 0.10%, 0.10%, 0.10%, 0.10%]